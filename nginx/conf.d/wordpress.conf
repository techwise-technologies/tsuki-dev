fastcgi_cache_path /tmp/fastcgi_cache levels=1:2 keys_zone=wordpress:100m max_size=10g inactive=60m use_temp_path=off;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

server {
        listen 80;
        listen [::]:80;
        server_name your_domain.com;
        return 301 https://your_domain.com$request_uri;
    }

server {
    listen      443           quic reuseport default_server;
    listen      443           ssl http2;
    listen [::]:443           ssl http2;
    proxy_request_buffering   off;
    client_max_body_size      100M;
    access_log                /var/log/nginx/access.log;
    error_log                 /var/log/nginx/error.log;
    server_name               your_domain.com www.your_domain.com;

    #add_header               Strict-Transport-Security "max-age=31536000" always;
    add_header                Alt-Svc 'h3-29=":443"; ma=2592000, h3-28=":443"; ma=2592000, H3-27=":443"; ma=2592000, h3-Q050=":443"; ma=2592000, h3-Q046=":443"; ma=2592000, h3-Q043=":443"; ma=2592000, quic=":443"; ma=2592000; v="46,43"';


    ssl_early_data            on;
    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       10m;

    ssl_protocols 	      TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

#    ssl_stapling              on;
#    ssl_stapling_verify       on;
    resolver                  1.1.1.1 1.0.0.1;

    root /var/www/html;
        location '/.well-known/acme-challenge' {
            default_type "text/plain";
            root /var/www/html;
        }
 
    index index.php;
 
    ssl_certificate           /etc/letsencrypt/live/your_domain.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/your_domain.com/privkey.pem;
    ssl_trusted_certificate   /etc/letsencrypt/live/your_domain.com/chain.pem;

    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    if ($query_string != "") {
        set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }
	
    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    ## Nginx FastCGI 
    location ~ \.php$ {
        try_files $uri =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
        add_header X-FastCGI-Cache $upstream_cache_status;
        fastcgi_cache_min_uses 1;
        fastcgi_cache wordpress;
        fastcgi_cache_valid 200 301 302 60m;
        fastcgi_buffer_size 128k;
        fastcgi_connect_timeout 60s;
        fastcgi_read_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_buffers 256 16k;
        fastcgi_cache_lock on;
        fastcgi_cache_revalidate on;
        fastcgi_cache_background_update on;
        fastcgi_pass_header Set-Cookie;
        fastcgi_pass_header Cookie;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }

    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        access_log off;  log_not_found off; 
        expires 365d; add_header Cache-Control "public, no-transform";
    }
  
    location ~* .(js|css|pdf|html|swf)$ {
        expires 30d; 
        add_header Cache-Control "public, no-transform";
    }

    location = /robots.txt { 
        access_log off; log_not_found off; 
    }
  
    location ~ /\. { 
        deny  all; access_log off; log_not_found off; 
    }
}
